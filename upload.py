"""
Upload to Wikimedia Commons

This needs a "batch" folder for input 
Read parquet file and then upload assets 

"""
import getopt
import sys

from wikiutils.utils import Utils
from wikiutils.uploader import Uploader

utils = Utils()
uploader = Uploader()
input = None
failed_count, upload_count, skip_count, total_count = 0, 0, 0, 0
columns = {
            "dpla_id": "dpla_id",
            "path": "path",
            "size": "size",
            "title": "title",
            "markup": "markup",
            "page": "page"
           }


# Get input parameters 
try:
    opts, args = getopt.getopt(sys.argv[1:], "hi:u:o:", ["input="])
except getopt.GetoptError:
    print('upload.py --input <path to parquet>')
    sys.exit(2)

for opt, arg in opts:
    if opt == '-h':
        print(
            'upload.py --input <path to parquet>')
        sys.exit()
    elif opt in ("-i", "--input"):
        input = arg

uploader.log.log_info(f"Input: {input}")

# Input file path to parquet files generated by "downloader". Basically the ./data/ directory
# This parquet file will specify what to upload and where it can be found
file_list = utils.get_parquet_files(path=input)

for parquet_file in file_list:
    df = utils.get_df(parquet_file, columns=columns)
    total_count = len(df)
    uploader.log.log_info(f"Processing {parquet_file}")             
    uploader.log.log_info(f"Number of rows in {parquet_file}: {total_count}")
    
    for row in df.itertuples(index=columns):
        dpla_id, path, size, title, wiki_markup = None, None, None, None, None
        try: 
            # Load record from dataframe
            dpla_id, path, size, title, wiki_markup, page = uploader.get_metadata(row)

            page = None if len(df.loc[df['dpla_id'] == dpla_id]) == 1 else page

            # Get file extension
            ext = uploader.get_extension(path)

            # Create Wikimedia page title
            page_title = uploader.create_wiki_page_title(title=title,
                                                    dpla_identifier=dpla_id,
                                                    suffix=ext,
                                                    page=page)

            # Create wiki page using Wikimedia page title

            wiki_page = uploader.create_wiki_file_page(title=page_title)
            
            if wiki_page is None:
                uploader.log.log_info(f"Skipping {page_title}, already exists")
                skip_count += 1
                continue

            # Upload image to wiki page
            uploader.log.log_info(f"Uploading to https://commons.wikimedia.org/wiki/{wiki_page.title()}")

            uploader.upload(wiki_file_page=wiki_page,
                            dpla_identifier=dpla_id,
                            text=wiki_markup,
                            file=path,
                            page_title=page_title
                            )
            upload_count += 1
        except Exception as exception:
            uploader.log.log_error(exception)
            failed_count =+ 1
            continue

# Summarize upload
uploader.log.log_info(f"Finished upload for {input}")
uploader.log.log_info(f"Attempted: {total_count} files")
uploader.log.log_info(f"Uploaded {upload_count} new files")
uploader.log.log_info(f"Failed {failed_count} files")
uploader.log.log_info(f"Skipped {skip_count} files")

# Upload log file to s3
uploader.log.write_log_s3(out_path=input)

